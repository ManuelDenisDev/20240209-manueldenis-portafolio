---
import '@fontsource-variable/inter'; // Supports weights 100-900
import '../styles/main.css';

import {ViewTransitions} from 'astro:transitions';
import MenuWrapper from '../components/MenuWrapper.astro';
import LogoNav from '../components/LogoNav.astro';
import NavDesktop from '../components/NavDesktop.astro';
import SocialDesktop from '../components/SocialDesktop.astro';
import IconConfig from '../icons/IconConfig.astro';
import IconMenu from '../icons/IconMenu.astro';
import HamburgerButton from '@/components/HamburgerButton.astro';

import {MOBILE_MENU_CONTENT_ID} from '@/consts/mobile-menu';
import Header from '@/components/Header.astro';
import BottonAvailable from '@/components/BottonAvailable.astro';
import SocialDesktopMobile from '@/components/SocialDesktopMobile.astro';

interface Props {
	title: string;
	description: string; // Add the 'description' property
}

const {title, description} = Astro.props;
const {currentLocale} = Astro;

const width = 'w-6';
const genericHamburgerLine = `h-[2px] ${width} bg-gray-300 transition ease transform duration-300`;
---

<!doctype html>
<html lang={currentLocale}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>

		<link rel="preload" href="/fonts/CascadiaCodePL.woff2" as="font" type="font/woff2" crossorigin />
	</head>
	<body class="block h-screen w-screen overflow-x-hidden bg-black text-white antialiased">
		<div
			class="absolute top-0 z-[-2] h-screen w-screen bg-neutral-950 bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]">
		</div>
		<!-- Contenedor de las barras de navegacion -->
		<header class="bg-black/30">
			<MenuWrapper>
				<!-- Barra de navegacion Escritorio -->
				<nav class="flex h-[5rem] items-center justify-between px-4">
					<LogoNav />
					<NavDesktop />
					<SocialDesktop />
					<button
						id="menuButton"
						aria-expanded="false"
						aria-controls={MOBILE_MENU_CONTENT_ID}
						class:list={['hamburgerButton group relative block flex h-[20px] flex-col items-center justify-between lg:hidden', width]}
						aria-label="Abrir menú de navegación">
						<span class:list={['group-[.open]:translate-y-2 group-[.open]:rotate-45', genericHamburgerLine]}> </span>
						<span class:list={['group-[.open]:opacity-0', genericHamburgerLine]}></span>
						<span class:list={['group-[.open]:opacity-0', genericHamburgerLine]}></span>
						<span class:list={['group-[.open]:-translate-y-[0.6rem] group-[.open]:-rotate-45', genericHamburgerLine]}> </span>
					</button>
				</nav>
				<!-- Barra de navegacion Movil -->

				<div class="fixed bottom-0 left-0 right-0 top-0 z-50 hidden lg:hidden" id="menuOpen">
					<div
						class="absolute top-0 z-[-2] h-screen w-screen bg-neutral-950 bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]">
					</div>
					<header class="flex h-[5rem] items-center justify-between px-4">
						<LogoNav />
						<button
							id="menuButtonX"
							aria-expanded="false"
							aria-controls={MOBILE_MENU_CONTENT_ID}
							class:list={['hamburgerButton group relative block flex h-[20px] flex-col items-center justify-between lg:hidden', width]}
							aria-label="Abrir menú de navegación">
							<span class:list={['translate-y-2 rotate-45', genericHamburgerLine]}> </span>
							<span class:list={['opacity-0', genericHamburgerLine]}></span>
							<span class:list={['opacity-0', genericHamburgerLine]}></span>
							<span class:list={['-translate-y-[0.6rem] -rotate-45', genericHamburgerLine]}> </span>
						</button>
					</header>
					<hr class="border-t border-white/10 shadow-lg" />
					<nav class="flex flex-col">
						<ul class="flex flex-col items-center justify-center">
							<li class="flex h-[5rem] items-center decoration-wavy underline-offset-4 hover:underline"><a href="/experiencia">Experiencia</a></li>
							<li class="flex h-[5rem] items-center decoration-wavy underline-offset-4 hover:underline"><a href="/proyectos">Proyectos</a></li>
							<li class="flex h-[5rem] items-center decoration-wavy underline-offset-4 hover:underline"><a href="/sobre-mi">Sobre mí</a></li>
							<li class="flex h-[5rem] items-center decoration-wavy underline-offset-4 hover:underline"><a href="/contacto">Contacto</a></li>
							<li class="flex h-[5rem] items-center">
								<BottonAvailable />
							</li>
							<li class="flex h-[5rem] items-center">
								<SocialDesktopMobile />
							</li>
						</ul>
					</nav>
				</div>
			</MenuWrapper>
		</header>
		<hr class="border-t border-white/10 shadow-lg" />
		<slot />
	</body>
</html>
<style is:global>
	@font-face {
		font-family: 'Cascadia Code PL';
		font-style: normal;
		font-weight: 400;
		font-display: block; /* This property will help us not flash unstyled text for a couple hundred milliseconds, and then it would act like font-display: swap */
		src: url('/fonts/CascadiaCodePL.woff2') format('woff2');
	}
	html {
		scroll-behavior: smooth;
	}
	body {
		font-family: 'Inter Variable', sans-serif;
	}
	.link {
		@apply text-white transition-all duration-300 hover:text-white/60;
	}
	.purpletopink {
		@apply bg-gradient-to-r from-purple-500 to-pink-600 bg-clip-text font-extrabold text-transparent;
	}
	.pinktoorange {
		@apply bg-gradient-to-r from-pink-600 to-orange-400 bg-clip-text font-extrabold text-transparent;
	}
	.orangetored {
		@apply bg-gradient-to-r from-orange-400 to-red-600 bg-clip-text font-extrabold text-transparent;
	}
	.bluetocyan {
		@apply bg-gradient-to-r from-blue-400 to-cyan-600 bg-clip-text font-extrabold text-transparent;
	}
	.redtoorange {
		@apply bg-gradient-to-r from-red-400 to-orange-600 bg-clip-text font-extrabold text-transparent;
	}
	.hover-purpletopink {
		@apply text-white transition-all duration-300 hover:bg-gradient-to-r hover:from-purple-500 hover:to-pink-600 hover:bg-clip-text  hover:text-transparent;
	}
	.hover-pinktoorange {
		@apply text-white transition-all duration-300 hover:bg-gradient-to-r hover:from-pink-600 hover:to-orange-400 hover:bg-clip-text hover:text-transparent;
	}
	.hover-orangetored {
		@apply text-white transition-all duration-300 hover:bg-gradient-to-r hover:from-orange-400 hover:to-red-600 hover:bg-clip-text  hover:text-transparent;
	}
	.hover-bluetocyan {
		@apply text-white transition-all duration-300 hover:bg-gradient-to-r hover:from-blue-400 hover:to-cyan-600 hover:bg-clip-text  hover:text-transparent;
	}
	.hover-redtoorange {
		@apply text-white transition-all duration-300 hover:bg-gradient-to-r hover:from-red-400 hover:to-orange-600 hover:bg-clip-text  hover:text-transparent;
	}
	.bghover-purpletopink {
		@apply from-purple-500 to-pink-600 hover:bg-gradient-to-r;
	}
	.bghover-pinktoorange {
		@apply hover:bg-gradient-to-r hover:from-pink-600 hover:to-orange-400 hover:bg-clip-text hover:text-transparent;
	}
	.bghover-orangetored {
		@apply hover:bg-gradient-to-r hover:from-orange-400 hover:to-red-600 hover:bg-clip-text  hover:text-transparent;
	}
	.bghover-bluetocyan {
		@apply hover:bg-gradient-to-r hover:from-blue-400 hover:to-cyan-600 hover:bg-clip-text  hover:text-transparent;
	}
	.bghover-redtoorange {
		@apply hover:bg-gradient-to-r hover:from-red-400 hover:to-orange-600 hover:bg-clip-text  hover:text-transparent;
	}
</style>

<script>
	const button = document.querySelector('#menuButton') as HTMLButtonElement;
	const buttonX = document.querySelector('#menuButtonX') as HTMLButtonElement;
	const menuOpen = document.querySelector('#menuOpen') as HTMLDivElement;

	button.addEventListener('click', () => {
		menuOpen.classList.toggle('hidden');
		button.classList.toggle('group-[.open]');
	});

	buttonX.addEventListener('click', () => {
		menuOpen.classList.toggle('hidden');
		button.classList.toggle('group-[.open]');
	});
</script>
