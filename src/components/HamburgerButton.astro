---
const width = 'w-6';
const genericHamburgerLine = `h-[2px] ${width} bg-gray-300 transition ease transform duration-300`;
---

<button
	id={Astro.props.id}
	aria-expanded="false"
	aria-controls="menuMobileContent"
	class:list={['hamburgerButton group relative flex h-[20px] flex-col items-center justify-between lg:hidden', width]}
	aria-label="Abrir menú de navegación">
	<span class:list={['group-[.open]:translate-y-2 group-[.open]:rotate-45', genericHamburgerLine]}> </span>
	<span class:list={['group-[.open]:opacity-0', genericHamburgerLine]}></span>
	<span class:list={['group-[.open]:opacity-0', genericHamburgerLine]}></span>
	<span class:list={['group-[.open]:-translate-y-[0.6rem] group-[.open]:-rotate-45', genericHamburgerLine]}> </span>
</button>

<script>
	import {$} from '@/lib/dom-selector';

	function toggleMenu(nav: HTMLElement | null, menuMobileContent: HTMLElement | null) {
		menuMobileContent?.classList.toggle('open');
		nav?.classList.toggle('open');
		document.body.classList.toggle('overflow-hidden');
		document.body.classList.toggle('lg:overflow-auto');
	}

	document.addEventListener('astro:page-load', () => {
		const nav = $('nav');
		const menuButton = $('#menuButton');
		const innerMenuButton = $('#innerMenuButton');
		const menuMobileContext = $('#menuMobileContent');

		menuButton?.addEventListener('hamburgerButtonClicked', () => toggleMenu(nav, menuMobileContext));
		innerMenuButton?.addEventListener('hamburgerButtonClicked', () => toggleMenu(nav, menuMobileContext));

		if (menuMobileContext?.classList.contains('open')) {
			toggleMenu(nav, menuMobileContext);
		}
	});
</script>
